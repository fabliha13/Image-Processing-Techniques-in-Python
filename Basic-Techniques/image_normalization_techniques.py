# -*- coding: utf-8 -*-
"""Image Normalization Techniques.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YdMWKbUmrHB-Pombn7G4vY2W-nP9uzfF

##Min-Max Normalization
This method scales pixel values to a specific range, typically [0, 1] or [0, 255]. Itâ€™s simple and widely used for preparing images for machine learning models or to adjust brightness/contrast for display.
"""

import numpy as np

def min_max_normalize(image):
    image_norm = (image - np.min(image)) / (np.max(image) - np.min(image))
    return image_norm

normalized_image = min_max_normalize(image)

"""##Z-Score Normalization (Standardization)
This method normalizes the pixel values based on their mean and standard deviation. It centers the data around 0, making it more suitable when you need to compare features or work with algorithms sensitive to variations in data distributions (e.g., gradient-based optimizers).
"""

def z_score_normalize(image):
    mean = np.mean(image)
    std = np.std(image)
    image_norm = (image - mean) / std
    return image_norm

normalized_image = z_score_normalize(image)

"""##L2 Normalization (Euclidean Norm)
L2 normalization scales the image such that the sum of the squared pixel intensities equals 1. This is often used when you need to normalize feature vectors in image classification tasks.
"""

def l2_normalize(image):
    norm = np.linalg.norm(image)
    image_norm = image / norm
    return image_norm

normalized_image = l2_normalize(image)